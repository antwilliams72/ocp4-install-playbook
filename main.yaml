---
- hosts: localhost
  vars:
    clean_install_dir: true
    mirror_repo: false
    download: true
    install: false
    additionalTrustBundle: "{{ lookup('hashi_vault', 'secret=secret/ocp4/ca-bundle:cert token={{ vtoken }} url=http://provisioner.teklocal.net:8200').replace('\\n', '\n') }}"
    sshKey: "{{ lookup('hashi_vault', 'secret=secret/ocp4/sshKey:key token={{ vtoken }} url=http://provisioner.teklocal.net:8200').replace('\\n', '\n') }}"
    pullSecret: "{{ lookup('hashi_vault', 'secret=secret/ocp4/pullSecret:auths token={{ vtoken }} url=http://provisioner.teklocal.net:8200')|string }}"
    vcsa_password: "{{ lookup('hashi_vault', 'secret=secret/ocp4/vcsa_password:pass token={{ vtoken }} url=http://provisioner.teklocal.net:8200') }}"

  tasks:
    - name: Remove old install dir if it exists
      file:
        path: "{{ install_path }}"
        state: absent
      when: clean_install_dir|bool

    - name: Check that the install dir exists
      stat:
        path: "{{ install_path }}"
      register: install_dir_stat

    - name: Create install dir
      file:
        path: "{{ install_path }}"
        state: directory
      when: not install_dir_stat.stat.exists

    - name: Create openshift install file
      template:
        src: "templates/install-config.yaml.j2"
        dest: "{{ install_path }}/install-config.yaml"
      with_dict: "{{ocp_imageContentSources}}"

    - name: Get release into local repo
      shell: |
        oc adm release mirror -a {{ pull_secret_path }} --from=quay.io/{{ ocp_repo }}/{{ release_name }}:{{ ocp_release }}-{{ arch }} --to={{ local_reg }}/{{ local_repo }} --to-release-image={{ local_reg }}/{{ local_repo }}:{{ ocp_release }}-{{arch }}
      when: mirror_repo

    - name: Check that the openshift-install binary file exists
      stat:
        path: openshift-install
      register: stat_result
      when: download

    - name: Download binary for install
      shell: |
        oc adm release extract -a {{ pull_secret_path }} --command=openshift-install "{{ local_reg }}/{{ local_repo }}:{{ ocp_release }}-{{arch }}"
      when: 
        - not stat_result.stat.exists
        - download

    - name: Cluster install
      shell: |
        ./openshift-install --dir install create cluster
      when: install|bool
