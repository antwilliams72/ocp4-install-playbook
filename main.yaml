---
- hosts: localhost
  vars:
    ## additionalTrustBundle: "{{ lookup('hashi_vault', 'secret=secret/ocp4/ca-bundle:cert token={{ vtoken }} url=http://provisioner.teklocal.net:8200').replace('\\n', '\n') }}"
    sshKey: "{{ lookup('hashi_vault', 'secret=secret/data/ocp4/sshKey:data token={{ vtoken }} url=http://vault.k1ckr0cks.local:8200').replace('\\n', '\n') }}"
    pullSecret: "{{ lookup('hashi_vault', 'secret=secret/data/ocp4/pullSecret:data token={{ vtoken }} url=http://vault.k1ckr0cks.local:8200')|string }}"
    vcsa_password: "{{ lookup('hashi_vault', 'secret=secret/data/ocp4/vcsa_password:data token={{ vtoken }} url=http://vault.k1ckr0cks.local:8200') }}"

  task
    - name: Remove old install dir if it exists
      file:
        path: "{{ install_path }}"
        state: absent
      when: clean_install_dir|bool

    - name: Check that the install dir exists
      stat:
        path: "{{ install_path }}"
      register: install_dir_stat

    - name: Create install dir
      file:
        path: "{{ install_path }}"
        state: directory
      when: not install_dir_stat.stat.exists

    - name: Create openshift install file 
      template:
        src: "templates/install-config.yaml.j2"
        dest: "{{ install_path }}/install-config.yaml"

    # - name: Get release into local repo
    #   shell: |
    #     oc adm release mirror -a {{ pull_secret_path }} --from=quay.io/{{ ocp_repo }}/{{ release_name }}:{{ ocp_release }}-{{ arch }} --to={{ local_reg }}/{{ local_repo }} --to-release-image={{ local_reg }}/{{ local_repo }}:{{ ocp_release }}-{{arch }}
    #   when: mirror_repo

    # - name: Check that the openshift-install binary file exists
    #   stat:
    #     path: openshift-install
    #   register: stat_result
    #   when: download

    # - name: Download binary for install
    #   shell: |
    #     oc adm release extract -a {{ pull_secret_path }} --command=openshift-install "{{ local_reg }}/{{ local_repo }}:{{ ocp_release }}-{{arch }}"
    #   when: 
    #     - not stat_result.stat.exists
    #     - download

    # - block:
    #   - name: Cluster install
    #     shell: |
    #       ./openshift-install --dir install create cluster
    #     when: install|bool
    #     register: install_log

    #   rescue:

    #   - name: Show log
    #     debug:
    #       msg: "{{ install_log.stderr }}"
